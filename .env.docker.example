# OBP Keycloak Provider - Docker Environment Configuration
# Copy this file to .env and customize for your environment
#
# SECURITY NOTE: This configuration uses view-based access for enhanced security
# - Uses 'oidc_user' with restricted SELECT-only permissions
# - Accesses data only through 'v_oidc_users' view (not direct table access)
# - All write operations (INSERT, UPDATE, DELETE) are disabled
#
# =============================================================================
# DIRECTORY USAGE GUIDE
# =============================================================================
#
# ðŸ”§ .github/ Directory (CI/CD & Docker Build):
#    - GitHub workflows use Docker Hub credentials (GitHub secrets/variables)
#    - Dockerfile_themed uses these variables as BUILD-TIME arguments
#    - Variables are baked into the Docker image during build
#
# ðŸš€ sh/ Directory (Local Development & Runtime):
#    - Scripts read .env file for RUNTIME configuration
#    - Variables are passed to Docker containers at startup
#    - Used for local development and testing
#
# Most variables below are used by BOTH directories with different purposes

# =============================================================================
# KEYCLOAK ADMIN CONFIGURATION
# Used by: .github/ (build-time) + sh/ (runtime)
# =============================================================================
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=admin

# =============================================================================
# KEYCLOAK'S INTERNAL DATABASE CONFIGURATION
# This database stores Keycloak's realm data, users, clients, tokens, etc.
# Used by: .github/ (build-time ARG) + sh/ (runtime -e)
# =============================================================================
KC_DB_URL=jdbc:postgresql://localhost:5432/keycloakdb
KC_DB_USERNAME=keycloak
KC_DB_PASSWORD=f

# =============================================================================
# USER STORAGE DATABASE CONFIGURATION (SECURE VIEW-BASED ACCESS)
# This database contains the external user data that Keycloak federates
# IMPORTANT: Uses restricted 'oidc_user' with access only to 'v_oidc_users' view
# Used by: .github/ (build-time ARG) + sh/ (runtime -e, VALIDATED)
# =============================================================================
DB_URL=jdbc:postgresql://localhost:5432/obp_mapped
DB_USER=oidc_user
DB_PASSWORD=your_secure_password
DB_DRIVER=org.postgresql.Driver
DB_DIALECT=org.hibernate.dialect.PostgreSQLDialect

# MANDATORY: Table/View name - MUST be 'v_oidc_users' for security
# This ensures access only to the secure view, not the full authuser table
DB_AUTHUSER_TABLE=v_oidc_users

# MANDATORY: Provider filtering for user authentication (REQUIRED for security)
# This variable is REQUIRED and system will fail to start if not set
# Ensures only users from specific provider can authenticate
# Used by: sh/ (runtime -e, VALIDATED as required)
# Example values: obp_production, obp_development, tenant_a, etc.
OBP_AUTHUSER_PROVIDER=your_provider_name

# =============================================================================
# HIBERNATE CONFIGURATION (for User Storage)
# Used by: .github/ (build-time ARG) + sh/ (runtime -e)
# =============================================================================
HIBERNATE_DDL_AUTO=validate
HIBERNATE_SHOW_SQL=true
HIBERNATE_FORMAT_SQL=true

# =============================================================================
# KEYCLOAK RUNTIME CONFIGURATION
# Used by: .github/ (build-time ENV) + sh/ (runtime -e)
# =============================================================================
KC_HTTP_ENABLED=true
KC_HOSTNAME_STRICT=false
KC_HOSTNAME_STRICT_HTTPS=false
KC_HEALTH_ENABLED=true
KC_METRICS_ENABLED=true

# =============================================================================
# OPTIONAL RUNTIME PORTS (sh/ directory only)
# =============================================================================
# These are used only by sh/run-local-postgres-cicd.sh for local development
KEYCLOAK_HTTP_PORT=8000
KEYCLOAK_HTTPS_PORT=8443

# =============================================================================
# SECURITY REQUIREMENTS FOR DATABASE SETUP (Database Administrator)
# Required regardless of .github/ or sh/ usage
# =============================================================================
# The following SQL setup is REQUIRED by database administrator:
#
# 1. Create restricted user:
#    CREATE USER oidc_user WITH PASSWORD 'your_secure_password';
#
# 2. Create secure view (if not exists):
#    CREATE OR REPLACE VIEW v_oidc_users AS
#    SELECT id, username, email, firstname, lastname, provider
#    FROM authuser
#    WHERE provider = 'your_provider_name';
#
# 3. Grant minimal permissions:
#    GRANT SELECT ON v_oidc_users TO oidc_user;
#    GRANT USAGE ON SCHEMA public TO oidc_user;
#
# 4. Verify no other permissions:
#    REVOKE ALL ON authuser FROM oidc_user;
#    REVOKE ALL ON ALL TABLES IN SCHEMA public FROM oidc_user;
#    GRANT SELECT ON v_oidc_users TO oidc_user;

# =============================================================================
# CI/CD vs LOCAL DEVELOPMENT DIFFERENCES
# =============================================================================
#
# ðŸ”§ .github/ workflows (Dockerfile_themed):
#    - Uses these as ARG variables during Docker build
#    - Values are compiled into the Docker image
#    - GitHub secrets/variables override for Docker Hub publishing
#
# ðŸš€ sh/ scripts (run-local-postgres-cicd.sh):
#    - Reads .env file at runtime
#    - Validates required/security variables
#    - Passes to Docker container via -e flags
#    - DB_AUTHUSER_TABLE must equal 'v_oidc_users' (enforced)
#    - OBP_AUTHUSER_PROVIDER is mandatory (enforced)

# =============================================================================
# PRODUCTION DEPLOYMENT NOTES
# =============================================================================
# For production environments:
# 1. Use strong passwords (not 'f' or simple passwords)
# 2. Enable SSL/TLS for database connections
# 3. Use managed database services with backup and monitoring
# 4. Store secrets in secure secret management systems
# 5. Set OBP_AUTHUSER_PROVIDER to your actual provider name
# 6. Use dedicated database user with minimal required permissions only
#
# Example production values:
# KC_DB_URL=jdbc:postgresql://keycloak-prod.example.com:5432/keycloak?ssl=true
# DB_URL=jdbc:postgresql://user-storage-prod.example.com:5432/obp_mapped?ssl=true
# DB_PASSWORD=very_secure_complex_password
# OBP_AUTHUSER_PROVIDER=production_provider

# =============================================================================
# VALIDATION
# =============================================================================
# To validate your configuration, run:
# ./sh/run-local-postgres-cicd.sh
#
# The script will validate:
# - All required variables are set
# - DB_AUTHUSER_TABLE is set to 'v_oidc_users' for security
# - Database connectivity works
# - Provider authentication is configured
